{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-04T17:50:32.753Z",
    "end": "2024-07-04T17:50:33.612Z",
    "duration": 859,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "923ecc69-93f2-4944-9c6b-ec73a56e97f1",
      "title": "",
      "fullFile": "cypress/e2e/apiquiz/test.js",
      "file": "cypress/e2e/apiquiz/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d78b084-204a-40a8-aa66-4d7490d91a9b",
          "title": "Add new device using API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add a new device and validate the response",
              "fullTitle": "Add new device using API should add a new device and validate the response",
              "timedOut": null,
              "duration": 793,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: apiEndpoint,\n  body: newDevicePayload,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n}).then((response) => {\n  cy.log(\"Request URL:\", apiEndpoint);\n  cy.log(\"Request Payload:\", newDevicePayload);\n  cy.log(\"Response:\", response);\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body).to.have.property(\"name\", newDevicePayload.name);\n  expect(response.body).to.have.property(\"createdAt\");\n  expect(response.body.data).to.deep.equal(newDevicePayload.data);\n  expect(response.body.id).to.not.be.null;\n  expect(response.body.createdAt).to.not.be.null;\n  expect(response.body).to.have.property(\"data\");\n  expect(response.body.data).to.have.property(\"year\", newDevicePayload.data.year);\n  expect(response.body.data).to.have.property(\"price\", newDevicePayload.data.price);\n  expect(response.body.data).to.have.property(\"CPU model\", newDevicePayload.data[\"CPU model\"]);\n  expect(response.body.data).to.have.property(\"Hard disk size\", newDevicePayload.data[\"Hard disk size\"]);\n});",
              "err": {},
              "uuid": "10009bd5-2861-4059-8759-60bbd939b542",
              "parentUUID": "1d78b084-204a-40a8-aa66-4d7490d91a9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10009bd5-2861-4059-8759-60bbd939b542"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 793,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}